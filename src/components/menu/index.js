import React, {useState, useEffect} from 'react';

import {Menu, Card, Header, Segment, Button, Grid, Modal, Label, Divider, Icon, Image} from 'semantic-ui-react'

import ProjectSelectModal from '../projects/ProjectSelectModal'
import RunsSelectModal from '../projects/RunsSelectModal'

import UHN from './UHN.png'
import SK from './SK.png'
import GC from './GC.jpeg'
import MBD from './MBD.jpg'

const CrescentIcon = () => (
  <Icon.Group style={{marginTop: -3}} >
    <Icon name='cloud' size='big'  />
    <Icon name='moon' size='small' inverted style={{marginTop: 2, marginLeft: -2}} />
  </Icon.Group>
)

const InfoModal = () => (
  <Modal
    trigger={<Menu.Item><Icon size='large' name='info circle' /></Menu.Item>}
  >
    <Modal.Content>
    <Header content='Contact Us'/>

      Please email <a href='mailto:crescent.cloud.dev@gmail.com'>crescent.cloud.dev@gmail.com</a> or visit our <a href='https://github.com/pughlab/crescent' target='_blank'>Github</a> to reach the CReSCENT.cloud dev team about bugs, etc.

    <Divider/>
    <Header content='About Us'/>
      CanceR Single Cell ExpressioN Toolkit (CReSCENT) is a scalable and standardized set of novel algorithmic methods, tools, and a data portal deployed on cloud computing infrastructure. To allow comparison of cells in cancerous and healthy tissues, the system will aggregate single-cell genomic data generated by cancer researchers and connect them to international reference data generated by experts from around the world. This data sharing and aggregation system is a key differentiating factor in CReSCENT that will increase researcher productivity by accelerating execution and comparison of computational methods, as well as providing contextual data for understanding how cells behave within tumour tissues.
    <Divider/>
    <Header content='Supported By'/>
      <Grid>
        <Grid.Row columns={4}>
          <Grid.Column>
            <Image src={UHN}/>
          </Grid.Column>
          <Grid.Column>
            <Image src={SK}/>
          </Grid.Column>
          <Grid.Column>
            <Image src={GC}/> 
          </Grid.Column>
          <Grid.Column>
            <Image src={MBD}/>
          </Grid.Column>
        </Grid.Row>

      </Grid>



    </Modal.Content>
  </Modal>
)

const MenuComponent = ({
  currentRunId, setCurrentRunId,
  currentProjectID, setCurrentProjectID,
  userID
}) => {
  return (
    <Segment attached='bottom' style={{height: '8%'}} as={Menu} size='large'>
      <Menu.Item header content={<CrescentIcon />} />

      <Menu.Menu position='right'>
        <RunsSelectModal
          {...{
            currentRunId, setCurrentRunId,
            currentProjectID
          }}
        />
        <Menu.Item onClick={() => setCurrentProjectID(null)}>
          {'Projects'}
          <ProjectSelectModal 
            {...{
              currentProjectID, setCurrentProjectID,
              setCurrentRunId,
              userID
            }}
          />
        </Menu.Item>
        <InfoModal />
      </Menu.Menu>
    </Segment>
  )
}

export default MenuComponent