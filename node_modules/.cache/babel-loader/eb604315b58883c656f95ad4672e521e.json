{"ast":null,"code":"var _jsxFileName = \"/Users/smohanra/Desktop/crescentMockup/crescent/src/App.js\";\nimport React, { Component, useState } from 'react';\nimport './App.css';\nimport { Icon, Menu, Segment, Button, Label, Grid, Image, Modal } from 'semantic-ui-react';\nimport tsne from './tsne.png';\nimport logo from \"./logo.svg\";\n\nconst VisualizationComponent = ({}) => {\n  return React.createElement(Segment, {\n    attached: \"top\",\n    style: {\n      height: '90%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    style: {\n      height: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    width: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(Image, {\n    size: \"small\",\n    src: tsne,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  })), React.createElement(Grid.Column, {\n    width: 4,\n    style: {\n      height: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Segment, {\n    style: {\n      height: '50%'\n    },\n    content: \"legend\",\n    placeholder: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), React.createElement(Segment, {\n    style: {\n      height: '50%'\n    },\n    content: \"logs\",\n    placeholder: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }))));\n};\n\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activeItem: ''\n    };\n\n    this.handleItemClick = (e, {\n      name\n    }) => this.setState({\n      activeItem: name\n    });\n  }\n\n  render() {\n    const activeItem = this.state.activeItem;\n    const shouldExpand = activeItem !== '';\n    return React.createElement(Segment, {\n      style: {\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      attached: \"bottom\",\n      style: {\n        height: '10%'\n      },\n      as: Menu,\n      size: \"big\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Menu.Item, {\n      header: true,\n      icon: \"database\",\n      iconPosition: \"left\",\n      content: \"CReSCENT\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(Modal, {\n      trigger: React.createElement(Menu.Item, {\n        content: React.createElement(Button, {\n          color: \"red\",\n          content: \"Upload\",\n          icon: \"upload\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }),\n      header: \"Upload Workflow Inputs Here\",\n      content: \"Upload API stuff here\",\n      actions: [React.createElement(Button, {\n        key: \"submit\",\n        content: \"Submit uploads\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      })],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(Menu.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(Menu.Menu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, ['Alignment', 'Normalization', 'Clustering'].map(step => React.createElement(Modal, {\n      trigger: React.createElement(Menu.Item, {\n        key: step,\n        content: React.createElement(Button, {\n          content: step,\n          fluid: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }),\n      header: step,\n      content: \"\".concat(step, \" parameters\"),\n      actions: [React.createElement(Button, {\n        key: \"close\",\n        content: \"close\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      })],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    })))));\n  }\n\n}","map":{"version":3,"sources":["/Users/smohanra/Desktop/crescentMockup/crescent/src/App.js"],"names":["React","Component","useState","Icon","Menu","Segment","Button","Label","Grid","Image","Modal","tsne","VisualizationComponent","height","App","state","activeItem","handleItemClick","e","name","setState","render","shouldExpand","map","step"],"mappings":"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","sourcesContent":["import React, {Component, useState} from 'react';\nimport './App.css';\n\nimport { Icon, Menu, Segment, Button, Label, Grid, Image, Modal } from 'semantic-ui-react'\n\nimport tsne from './tsne.png'\nimport logo from './logo.svg'\n\nconst VisualizationComponent = ({\n\n}) => {\n\n  return (\n    <Segment attached='top' style={{height: '90%'}}>\n      <Grid style={{height: '100%'}}>\n        <Grid.Column width={12}>\n          <Image size='small' src={tsne} />\n        </Grid.Column>\n        <Grid.Column width={4} style={{height: '100%'}}>\n          <Segment style={{height: '50%'}} content='legend' placeholder/>\n          <Segment style={{height: '50%'}} content='logs' placeholder/>\n        </Grid.Column>\n      </Grid>\n    </Segment>\n  )\n}\n\nexport default class App extends Component {\n  state = {\n    activeItem: '',\n  }\n\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name })\n  render() {\n    const { activeItem } = this.state\n    const shouldExpand = activeItem !== ''\n    return (\n      <Segment style={{height: '100%'}}>\n\n        \n        <Segment attached='bottom' style={{height: '10%'}} as={Menu} size='big'>\n          <Menu.Item\n            header\n            icon='database'\n            iconPosition='left'\n            content='CReSCENT'\n          />\n          <Modal\n            trigger={\n              <Menu.Item content={\n                <Button color='red' content='Upload' icon='upload'/>\n              } />\n            }\n            header='Upload Workflow Inputs Here'\n            content='Upload API stuff here'\n            actions={\n              [\n                <Button key='submit' content='Submit uploads' />\n              ]\n            }\n          />\n          <Menu.Item />\n          <Menu.Menu>\n          {\n            ['Alignment', 'Normalization', 'Clustering'].map(\n              step => (\n\n                  \n                    <Modal\n                      trigger={\n                        <Menu.Item key={step} content={\n                          <Button content={step} fluid />\n                        } />\n                      }\n                      header={step}\n                      content={`${step} parameters`}\n                      actions={[\n                        <Button key='close' content='close' />\n                      ]}\n                    />\n\n              )\n            )\n          }\n          </Menu.Menu>\n        </Segment>\n      </Segment>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}