{"ast":null,"code":"import _slicedToArray from \"/Users/smohanra/Desktop/crescentMockup/crescent/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/smohanra/Desktop/crescentMockup/crescent/src/App.js\";\nimport React, { Component, useState } from 'react';\nimport './App.css';\nimport { Icon, Menu, Popup, Header, Segment, Button, Label, Grid, Image, Modal, Divider } from 'semantic-ui-react';\nimport tsne from './tsne.png';\nimport logo from \"./logo.svg\";\n\nconst VisualizationComponent = ({\n  visContent,\n  setVisContent\n}) => {\n  return React.createElement(Segment, {\n    attached: \"top\",\n    style: {\n      height: '90%'\n    },\n    inverted: true,\n    color: \"grey\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    style: {\n      height: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    width: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(Segment, {\n    style: {\n      height: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Header, {\n    content: visContent == 'Home' ? 'Home plot here' : visContent == 'Alignment' ? 'Alignment plot here' : visContent == 'Normalization' ? 'Normalization plot here' : visContent == 'Clustering' ? 'Clustering plot here' : 'No plots',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(Image, {\n    size: \"large\",\n    src: tsne,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }))), React.createElement(Grid.Column, {\n    width: 4,\n    style: {\n      height: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Segment, {\n    style: {\n      height: '40%'\n    },\n    placeholder: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Label, {\n    color: \"green\",\n    attached: \"top\",\n    content: \"Visualization Panel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), visContent), React.createElement(Segment, {\n    style: {\n      height: '40%'\n    },\n    placeholder: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Label, {\n    color: \"blue\",\n    attached: \"top\",\n    content: \"Logs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), visContent))));\n};\n\nconst MenuComponent = ({\n  visContent,\n  setVisContent\n}) => {\n  return React.createElement(Segment, {\n    attached: \"bottom\",\n    style: {\n      height: '10%'\n    },\n    as: Menu,\n    size: \"huge\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Menu.Item, {\n    header: true,\n    icon: \"moon\",\n    content: \"CReSCENT\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(Menu.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(Modal, {\n    trigger: React.createElement(Menu.Item, {\n      content: React.createElement(Button, {\n        color: \"red\",\n        content: \"Upload\",\n        icon: \"upload\",\n        labelPosition: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }),\n    header: \"Upload Workflow Inputs Here\",\n    content: \"Upload API stuff here\",\n    actions: [React.createElement(Button, {\n      key: \"submit\",\n      content: \"Submit uploads\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), [{\n    step: 'Alignment',\n    icon: 'align justify'\n  }, {\n    step: 'Normalization',\n    icon: 'align center'\n  }, {\n    step: 'Clustering',\n    icon: 'hubspot'\n  }].map(({\n    step,\n    icon\n  }) => React.createElement(Popup, {\n    inverted: true,\n    key: step,\n    position: \"top center\",\n    on: \"click\",\n    trigger: React.createElement(Menu.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"black\",\n      labelPosition: \"left\",\n      icon: icon,\n      content: step,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })),\n    content: React.createElement(Button.Group, {\n      size: \"big\",\n      widths: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Button, {\n      content: \"Results\",\n      color: \"blue\",\n      icon: \"clipboard check\",\n      labelPosition: \"left\",\n      onClick: () => setVisContent(step),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(Button.Or, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(Modal, {\n      trigger: React.createElement(Button, {\n        icon: \"clipboard list\",\n        labelPosition: \"right\",\n        content: \"Parameters\",\n        color: \"green\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      content: step,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(Modal.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      width: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(Menu, {\n      fluid: true,\n      vertical: true,\n      tabular: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, ['Param1', 'Param2', 'Param3'].map(param => React.createElement(Menu.Item, {\n      key: param,\n      content: param,\n      onClick: () => console.log(param),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    })))), React.createElement(Grid.Column, {\n      stretched: true,\n      width: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Parameter selection here\")))), React.createElement(Modal.Actions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(Button, {\n      content: \"Confirm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    })))),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  })), React.createElement(Menu.Menu, {\n    position: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(Menu.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(Button, {\n    content: \"Submit\",\n    icon: \"cloud upload\",\n    labelPosition: \"left\",\n    color: \"blue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }))));\n};\n\nconst App = ({}) => {\n  const _useState = useState('Home'),\n        _useState2 = _slicedToArray(_useState, 2),\n        visContent = _useState2[0],\n        setVisContent = _useState2[1];\n\n  return React.createElement(Segment, {\n    style: {\n      height: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(VisualizationComponent, {\n    visContent: visContent,\n    setVisContent: setVisContent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }), React.createElement(MenuComponent, {\n    visContent: visContent,\n    setVisContent: setVisContent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/smohanra/Desktop/crescentMockup/crescent/src/App.js"],"names":["React","Component","useState","Icon","Menu","Popup","Header","Segment","Button","Label","Grid","Image","Modal","Divider","tsne","VisualizationComponent","visContent","setVisContent","height","MenuComponent","step","icon","map","param","console","log","App"],"mappings":"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","sourcesContent":["import React, {Component, useState} from 'react';\nimport './App.css';\n\nimport { Icon, Menu, Popup, Header, Segment, Button, Label, Grid, Image, Modal, Divider } from 'semantic-ui-react'\n\nimport tsne from './tsne.png'\nimport logo from './logo.svg'\n\nconst VisualizationComponent = ({\n  visContent,\n  setVisContent\n}) => {\n\n  return (\n    <Segment attached='top' style={{height: '90%'}} inverted color='grey'>\n      <Grid style={{height: '100%'}}>\n        <Grid.Column width={12}>\n          <Segment style={{height: '100%'}} >\n          <Header content={\n              visContent=='Home' ?\n              'Home plot here'\n              : visContent=='Alignment' ?\n              'Alignment plot here'\n              : visContent=='Normalization' ?\n              'Normalization plot here'\n              : visContent=='Clustering' ?\n              'Clustering plot here'\n              : 'No plots'\n            }\n          />\n          <Divider />\n          <Image size='large' src={tsne} />\n          </Segment>\n        </Grid.Column>\n        <Grid.Column width={4} style={{height: '100%'}}>\n          <Segment style={{height: '40%'}} placeholder>\n            <Label color='green' attached='top' content='Visualization Panel' />\n            {visContent}\n          </Segment>\n          <Segment style={{height: '40%'}} placeholder>\n            <Label color='blue' attached='top' content='Logs' />\n            {visContent}\n          </Segment>\n        </Grid.Column>\n      </Grid>\n    </Segment>\n  )\n}\n\nconst MenuComponent = ({\n  visContent,\n  setVisContent\n}) => {\n  return (\n        <Segment attached='bottom' style={{height: '10%'}} as={Menu} size='huge'>\n          <Menu.Item\n            header\n            icon='moon'\n            content='CReSCENT'\n          />\n          <Menu.Item />\n          <Modal\n            trigger={\n              <Menu.Item content={\n                <Button color='red' content='Upload' icon='upload' labelPosition='left'/>\n              } />\n            }\n            header='Upload Workflow Inputs Here'\n            content='Upload API stuff here'\n            actions={\n              [\n                <Button key='submit' content='Submit uploads' />\n              ]\n            }\n          />\n          {\n            [\n              {step: 'Alignment', icon: 'align justify'},\n              {step: 'Normalization', icon: 'align center'},\n              {step: 'Clustering', icon: 'hubspot'}\n            ].map(\n              ({step, icon}) => (\n                <Popup inverted key={step}\n                  position='top center'\n                  on='click'\n                  trigger={\n                    <Menu.Item>\n                      <Button color='black' labelPosition='left' icon={icon} content={step} />\n                    </Menu.Item>\n                  }\n                  content={\n                    <Button.Group size='big' widths={2}>\n                      <Button content='Results' color='blue'\n                        icon='clipboard check'\n                        labelPosition='left'\n                        onClick={() => setVisContent(step)}\n                      />\n                      <Button.Or />\n                      <Modal\n                        trigger={\n                            <Button \n                              icon='clipboard list'\n                              labelPosition='right'\n                            content='Parameters' color='green' />\n                        }\n                      >\n                        <Modal.Header content={step} />\n                        <Modal.Content>\n                          <Grid>\n                            <Grid.Column width={4}>\n                              <Menu fluid vertical tabular='left'>\n                              {\n                                ['Param1', 'Param2', 'Param3'].map(\n                                  param => (\n                                    <Menu.Item key={param} content={param} onClick={() => console.log(param)}/>\n                                  )\n                                )\n                              }\n                              </Menu>\n                            </Grid.Column>\n                            <Grid.Column stretched width={12}>\n                              <Segment>\n                                Parameter selection here\n                              </Segment>\n                            </Grid.Column>\n                          </Grid>\n                        </Modal.Content>\n                        <Modal.Actions>\n                          <Button content='Confirm' />\n                        </Modal.Actions>\n                      </Modal>\n                    </Button.Group>\n                  }\n                />\n\n\n              )\n            )\n          }\n\n          <Menu.Menu position='right'>\n            <Menu.Item>\n              <Button content='Submit' icon='cloud upload' labelPosition='left' color='blue' />\n            </Menu.Item>\n          </Menu.Menu>\n        </Segment>\n  )\n}\n\nconst App = ({\n\n}) => {\n    const [visContent, setVisContent] = useState('Home')\n    return (\n      <Segment style={{height: '100%'}}>\n        <VisualizationComponent\n          visContent={visContent}\n          setVisContent={setVisContent}\n        />\n        <MenuComponent\n          visContent={visContent}\n          setVisContent={setVisContent}\n        />\n      </Segment>\n    )\n  }\n\n  export default App\n"]},"metadata":{},"sourceType":"module"}