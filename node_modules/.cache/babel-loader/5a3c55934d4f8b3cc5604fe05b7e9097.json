{"ast":null,"code":"import _slicedToArray from \"/Users/smohanra/Desktop/crescentMockup/crescent/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/smohanra/Desktop/crescentMockup/crescent/src/App.js\";\nimport React, { Component, useState } from 'react';\nimport './App.css';\nimport { Icon, Menu, Popup, Header, Segment, Button, Label, Grid, Image, Modal, Divider } from 'semantic-ui-react';\nimport tsne from './tsne.png';\nimport logo from \"./logo.svg\"; // <Image size='small' src={tsne} />\n\nconst VisualizationComponent = ({\n  visContent,\n  setVisContent\n}) => {\n  return React.createElement(Segment, {\n    attached: \"top\",\n    style: {\n      height: '90%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    style: {\n      height: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    width: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Header, {\n    content: visContent == 'Home' ? 'Home plot here' : visContent == 'Alignment' ? 'Alignment plot here' : visContent == 'Normalization' ? 'Normalization plot here' : visContent == 'Clustering' ? 'Clustering plot here' : 'No plots',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  })), React.createElement(Grid.Column, {\n    width: 4,\n    style: {\n      height: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Segment, {\n    style: {\n      height: '50%'\n    },\n    content: \"\".concat(visContent, \" legend\"),\n    placeholder: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(Segment, {\n    style: {\n      height: '50%'\n    },\n    content: \"\".concat(visContent, \" logs\"),\n    placeholder: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }))));\n};\n\nconst MenuComponent = ({\n  visContent,\n  setVisContent\n}) => {\n  return React.createElement(Segment, {\n    attached: \"bottom\",\n    style: {\n      height: '10%'\n    },\n    as: Menu,\n    size: \"big\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Menu.Item, {\n    header: true,\n    icon: \"database\",\n    content: \"CReSCENT\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(Modal, {\n    trigger: React.createElement(Menu.Item, {\n      content: React.createElement(Button, {\n        color: \"red\",\n        content: \"Upload\",\n        icon: \"upload\",\n        labelPosition: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }),\n    header: \"Upload Workflow Inputs Here\",\n    content: \"Upload API stuff here\",\n    actions: [React.createElement(Button, {\n      key: \"submit\",\n      content: \"Submit uploads\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    })],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(Menu.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), ['Alignment', 'Normalization', 'Clustering'].map(step => React.createElement(Popup, {\n    on: \"click\",\n    trigger: React.createElement(Menu.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Button, {\n      content: step,\n      color: \"black\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })),\n    content: React.createElement(Button.Group, {\n      size: \"big\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Button, {\n      content: \"Results\",\n      color: \"blue\",\n      onClick: () => setVisContent(step),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(Button.Or, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(Modal, {\n      trigger: React.createElement(Menu.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(Button, {\n        content: \"Parameters\",\n        color: \"green\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      })),\n      header: step,\n      content: \"\".concat(step, \" parameters\"),\n      actions: [React.createElement(Button, {\n        key: \"close\",\n        content: \"close\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      })],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  })), React.createElement(Menu.Menu, {\n    position: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(Menu.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(Button, {\n    content: \"Submit\",\n    icon: \"cloud upload\",\n    labelPosition: \"left\",\n    color: \"red\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }))));\n};\n\nconst App = ({}) => {\n  const _useState = useState('Home'),\n        _useState2 = _slicedToArray(_useState, 2),\n        visContent = _useState2[0],\n        setVisContent = _useState2[1];\n\n  return React.createElement(Segment, {\n    style: {\n      height: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(VisualizationComponent, {\n    visContent: visContent,\n    setVisContent: setVisContent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }), React.createElement(MenuComponent, {\n    visContent: visContent,\n    setVisContent: setVisContent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/smohanra/Desktop/crescentMockup/crescent/src/App.js"],"names":["React","Component","useState","Icon","Menu","Popup","Header","Segment","Button","Label","Grid","Image","Modal","Divider","tsne","VisualizationComponent","visContent","setVisContent","height","MenuComponent","map","step","App"],"mappings":"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","sourcesContent":["import React, {Component, useState} from 'react';\nimport './App.css';\n\nimport { Icon, Menu, Popup, Header, Segment, Button, Label, Grid, Image, Modal, Divider } from 'semantic-ui-react'\n\nimport tsne from './tsne.png'\nimport logo from './logo.svg'\n\n// <Image size='small' src={tsne} />\n\nconst VisualizationComponent = ({\n  visContent,\n  setVisContent\n}) => {\n\n  return (\n    <Segment attached='top' style={{height: '90%'}}>\n      <Grid style={{height: '100%'}}>\n        <Grid.Column width={12}>\n          <Header content={\n              visContent=='Home' ?\n              'Home plot here'\n              : visContent=='Alignment' ?\n              'Alignment plot here'\n              : visContent=='Normalization' ?\n              'Normalization plot here'\n              : visContent=='Clustering' ?\n              'Clustering plot here'\n              : 'No plots'\n            }\n          />\n          <Divider />\n        </Grid.Column>\n        <Grid.Column width={4} style={{height: '100%'}}>\n          <Segment style={{height: '50%'}}\n            content={`${visContent} legend`} placeholder\n          />\n          <Segment style={{height: '50%'}} \n            content={`${visContent} logs`} placeholder\n          />\n        </Grid.Column>\n      </Grid>\n    </Segment>\n  )\n}\n\nconst MenuComponent = ({\n  visContent,\n  setVisContent\n}) => {\n\n  return (\n        <Segment attached='bottom' style={{height: '10%'}} as={Menu} size='big'>\n          <Menu.Item\n            header\n            icon='database'\n            content='CReSCENT'\n          />\n          <Modal\n            trigger={\n              <Menu.Item content={\n                <Button color='red' content='Upload' icon='upload' labelPosition='left'/>\n              } />\n            }\n            header='Upload Workflow Inputs Here'\n            content='Upload API stuff here'\n            actions={\n              [\n                <Button key='submit' content='Submit uploads' />\n              ]\n            }\n          />\n          <Menu.Item />\n          {\n            ['Alignment', 'Normalization', 'Clustering'].map(\n              step => (\n                <Popup\n                  on='click'\n                  trigger={\n                    <Menu.Item>\n                      <Button content={step} color='black' />\n                    </Menu.Item>\n                  }\n                  content={\n                    <Button.Group size='big'>\n                      <Button content='Results' color='blue'\n                        onClick={() => setVisContent(step)}\n                      />\n                      <Button.Or />\n                      <Modal\n                        trigger={\n                          <Menu.Item>\n                            <Button content='Parameters' color='green' />\n                          </Menu.Item>\n                        }\n                        header={step}\n                        content={`${step} parameters`}\n                        actions={[\n                          <Button key='close' content='close' />\n                        ]}\n                      />\n                    </Button.Group>\n                  }\n                />\n\n\n              )\n            )\n          }\n\n          <Menu.Menu position='right'>\n            <Menu.Item>\n              <Button content='Submit' icon='cloud upload' labelPosition='left' color='red' />\n            </Menu.Item>\n          </Menu.Menu>\n        </Segment>\n  )\n}\n\nconst App = ({\n\n}) => {\n    const [visContent, setVisContent] = useState('Home')\n    return (\n      <Segment style={{height: '100%'}}>\n        <VisualizationComponent\n          visContent={visContent}\n          setVisContent={setVisContent}\n        />\n        <MenuComponent\n          visContent={visContent}\n          setVisContent={setVisContent}\n        />\n      </Segment>\n    )\n  }\n\n  export default App\n"]},"metadata":{},"sourceType":"module"}