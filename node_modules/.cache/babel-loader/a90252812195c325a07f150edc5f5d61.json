{"ast":null,"code":"var _jsxFileName = \"/Users/smohanra/Desktop/crescentMockup/crescent/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { Icon, Menu, Segment, Button, Label, Grid, Image, Modal } from 'semantic-ui-react';\nimport tsne from './tsne.png';\nimport logo from \"./logo.svg\";\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activeItem: ''\n    };\n\n    this.handleItemClick = (e, {\n      name\n    }) => this.setState({\n      activeItem: name\n    });\n  }\n\n  render() {\n    const activeItem = this.state.activeItem;\n    const shouldExpand = activeItem !== '';\n    return React.createElement(Segment, {\n      style: {\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      attached: \"top\",\n      style: {\n        height: shouldExpand ? '50%' : '90%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      style: {\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      width: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(Image, {\n      src: tsne,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    })), React.createElement(Grid.Column, {\n      width: 4,\n      style: {\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      style: {\n        height: '50%'\n      },\n      content: \"legend\",\n      placeholder: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), React.createElement(Segment, {\n      style: {\n        height: '50%'\n      },\n      content: \"logs\",\n      placeholder: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    })))), shouldExpand && React.createElement(Segment, {\n      attached: true,\n      placeholder: shouldExpand,\n      style: {\n        height: '40%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Label, {\n      attached: \"top\",\n      onClick: () => this.setState({\n        activeItem: ''\n      }),\n      content: shouldExpand ? 'Close' : 'Select below to expand',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Button.Group, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Button, {\n      content: 'Parameter 2',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(Button, {\n      content: 'Parameter 3',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(Button, {\n      content: 'Parameter 4',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    })))), React.createElement(Segment, {\n      attached: \"bottom\",\n      style: {\n        height: '10%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Menu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, ['Alignment', 'Normalization', 'Clustering'].map(step => React.createElement(Modal, {\n      trigger: React.createElement(Menu.Item, {\n        key: step,\n        content: React.createElement(Button, {\n          content: step,\n          fluid: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }),\n      header: \"cwl tool name\",\n      content: \"parameter buttons go here\",\n      actions: [React.createElement(Button, {\n        key: \"close\",\n        content: \"close\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      })],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })))));\n  }\n\n}","map":{"version":3,"sources":["/Users/smohanra/Desktop/crescentMockup/crescent/src/App.js"],"names":["React","Component","Icon","Menu","Segment","Button","Label","Grid","Image","Modal","tsne","App","state","activeItem","handleItemClick","e","name","setState","render","shouldExpand","height","map","step"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\n\nimport { Icon, Menu, Segment, Button, Label, Grid, Image, Modal } from 'semantic-ui-react'\n\nimport tsne from './tsne.png'\nimport logo from './logo.svg'\n\nexport default class App extends Component {\n  state = {\n    activeItem: '',\n  }\n\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name })\n  render() {\n    const { activeItem } = this.state\n    const shouldExpand = activeItem !== ''\n    return (\n      <Segment style={{height: '100%'}}>\n        <Segment attached='top' style={{height: shouldExpand ? '50%' : '90%'}}>\n          <Grid style={{height: '100%'}}>\n            <Grid.Column width={12}>\n              <Image src={tsne} />\n            </Grid.Column>\n            <Grid.Column width={4} style={{height: '100%'}}>\n              <Segment style={{height: '50%'}} content='legend' placeholder/>\n              <Segment style={{height: '50%'}} content='logs' placeholder/>\n            </Grid.Column>\n          </Grid>\n        </Segment>\n        {\n          shouldExpand &&\n          <Segment attached placeholder={shouldExpand} style={{height: '40%'}}>\n            <Label attached='top'\n\n                onClick={() => this.setState({activeItem: ''})}\n                content={shouldExpand ? 'Close' : 'Select below to expand'}\n            />\n            <Segment>\n\n\n            <Button.Group fluid>\n              <Button content={'Parameter 2'} />\n              <Button content={'Parameter 3'} />\n              <Button content={'Parameter 4'} />\n            </Button.Group>\n            </Segment>\n          </Segment>          \n        }\n\n\n        <Segment attached='bottom' style={{height: '10%'}}>\n          <Menu>\n          {\n            ['Alignment', 'Normalization', 'Clustering'].map(\n              step => (\n\n                  \n                    <Modal\n                      trigger={\n                        <Menu.Item key={step} content={\n                          <Button content={step} fluid />\n                        } />\n                      }\n                      header='cwl tool name'\n                      content='parameter buttons go here'\n                      actions={[\n                        <Button key='close' content='close' />\n                      ]}\n                    />\n\n              )\n            )\n          }\n          </Menu>\n        </Segment>\n      </Segment>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}